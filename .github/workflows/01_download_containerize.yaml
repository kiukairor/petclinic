name: Download and Containerize


# qd mon jar snapshot est upload, je build la docker image.
# je pousse l'image docker ds artifactory.

on:
  workflow_run:
    workflows: ["Scan, Build and Publish Jar"]
    types:
      - completed
  push:
    branches: [main]
    paths: 
      - 'Dockerfile'
      - 'docker-compose.yaml'
      - '.github/workflows/01_download_containerize.yaml'

permissions:
  id-token: write

jobs:
  download-from-artifactory:
    #  if: ${{github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up  Artifactory
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://trial3sr477.jfrog.io
        with:
          oidc-provider-name: github-jfrog
          oidc-audience: my-aud
          version: 2.75.0

      - name: Download JAR from Artifactory
        run: |
          jf rt dl my-repo-libs-snapshot/target/spring-petclinic-3.5.0-SNAPSHOT.jar
          ls -al
          ls -al target/

      - name: Checkout code
        uses: actions/checkout@v4

      - name: build docker image
        run: |
          ls -al
          ls -al target/
          docker build -t trial3sr477.jfrog.io/my-docker-repo-docker/jfrog-docker-example-image:${{ github.run_number }} .


# https://www.youtube.com/watch?v=UXMTOBkdvMY

# name: Build and Tag Docker Image

# on:
#   push:
#     branches:
#       - main
      
# jobs:
#   build-and-tag:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup JFrog CLI
#         uses: jfrog/setup-jfrog-cli@v4
#         env:
#           JF_URL: ${{ vars.JF_URL }}
#           JF_ACCESS_TOKEN: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}

#       - name: Build Tag and push Docker Image
#         env:
#           IMAGE_NAME: trial3sr477.jfrog.io/my-docker-repo-docker/jfrog-docker-example-image:${{ github.run_number }}
#         run: |
#           jf docker build -t $IMAGE_NAME .
#           jf docker push $IMAGE_NAME
          
#       - name: Publish Build info With JFrog CLI
#         env:
#           # Generated and maintained by GitHub
#           JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
#           # JFrog organization secret
#           JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
#         run: |
#           # Export the build name and build nuber
#           # Collect environment variables for the build
#           jf rt build-collect-env
#           # Collect VCS details from git and add them to the build
#           jf rt build-add-git
#           # Publish build info
#           jf rt build-publish