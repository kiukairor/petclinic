name: Build and Publish Jar

on:
  push:
    branches: [main]
    paths:
      - 'pom.xml'
      - 'src/**'
      - '.github/workflows/00_build.yaml'
permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  static-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up jfrog cli
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: 2.75.0
          oidc-provider-name: github-jfrog
          oidc-audience: my-aud
        env:
          JF_URL: https://trial3sr477.jfrog.io #

      - run: |
          ls -al
          jf scan .
               
  #     - name: Set up JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'

  #     - name: Run static security checks
  #       run: ./mvnw verify -Psecurity
  
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'

  #     - name: Cache Maven dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2/repository
  #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

  #     - name: Clean project
  #       run: ./mvnw clean

  #     # Run static checks before building
  #     # - name: Code Quality Checks
  #     #   run: mvn checkstyle:check

    

  #     - name: Compile only
  #       run: ./mvnw compile

  #     # - name: Run tests 
  #     #   run: ./mvnw test

  #     - name: Package (without rerunning tests)
  #       run: ./mvnw package -DskipTests
      
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: app-artifact
  #         path: target/*.jar

          
  #     - name: install jfrog-cli
  #       uses: jfrog/setup-jfrog-cli@v4
  #       with:
  #         version: latest
  #         oidc-provider-name: github-jfrog
  #         oidc-audience: my-aud

  
  # publish:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Download built artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: app-artifact
  #         path: target/
          

  #     - name: Verify artifact
  #       run: |
  #         ls -la

  #     - name: Set up Artifactory
  #       uses: jfrog/setup-jfrog-cli@v4
  #       env:
  #         JF_URL: https://trial3sr477.jfrog.io #
  #       with:
  #         oidc-provider-name: github-jfrog
  #         oidc-audience: my-aud
        
  #     - name: Upload to Artifactory  
  #       run: jf rt upload --url="$JF_URL" "target/*.jar" "petclinic-libs-snapshot-local/"
